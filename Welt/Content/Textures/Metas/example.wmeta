{
    // this is a Welt Meta file. It can be used to modify properties of the blocks such as:
    // - light 
    // - animation
    // - animation length
    // - animation call
    // - texture scale
    // - texture affects like color blending
    "light": [
        "3;3;3", // an array of RGB values that are updated every frame exchange
        "4" // you can also use single ints and the compiler will assume all three values are '4'
    ],
    "animation_length": 5, // the animation will only last for 5 update cycles before it moves to the next
    "animation_call": "random", // can be "random", "sequencial", "reverse", or "bounce" 
    // "random": will get random frames within the animation definition after each frame is over
    // "sequential": will go in order from first to last in a loop
    // "reverse": will go in order from last to first in a loop
    // "bounce": will go from first to last then last to first in a cycle
    "animation": [
        0 // this means we have only a single image in the texture file to use. The equivelant to this would be not using
          // "animation" fields.
    ],
    "texture_scale" : 0.5, // this means if the texture is 32x32, we will translate it as a 16x16
    "texture_affects": "noise();blend(208,70,200,255);"
    // we can use the following functions for affects: 
    // noise(): distorts the image with random gray-scale pixels. Parameters: <double> scale = 1, <double> frequency = 1
    // blend(): blends the image with a specified color. Parameters: <byte[]> r, <byte[]> g, <byte[]> b, <byte[]> a
    // opacity(): adjusts the alpha levels of the texture. Parameters: <double> value
    // particles(): assigns a specific particle engine to the texture. Parameters: <string> engine name (ie: Welt::FireParticle)
    
}